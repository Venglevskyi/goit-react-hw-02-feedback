{"version":3,"sources":["Components/Statistics/Statistics.js","Components/Notification/Notification.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","Notification","message","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","onClick","prototype","PropTypes","arrayOf","string","isRequired","func","Section","title","children","App","state","handleClick","name","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","querySelector"],"mappings":"sQAsCeA,EAnCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,+BACE,4BACE,oCACA,4BAAKJ,IAEP,4BACE,uCACA,4BAAKC,IAEP,4BACE,mCACA,4BAAKC,IAEP,4BACE,qCACA,4BAAKC,IAEP,4BACE,iDACA,4BAAKC,EAAL,SCfOC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCApCC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,QAAS,kBAAML,EAAgBE,KAE9BA,QAMTJ,EAAgBQ,UAAY,CAC1BP,QAASQ,IAAUC,QAAQD,IAAUE,OAAOC,YAC5CV,gBAAiBO,IAAUI,KAAKD,YAGnBZ,QCRAc,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICCgBC,E,2MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,WAAO,IAC/BpC,EAAS,EAAKyB,MAAdzB,KACR,OAAOqC,KAAKC,MAAc,IAAPtC,EAAc,EAAK8B,uB,wEAG9B,IAAD,EACwBS,KAAKd,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQoC,KAAKT,qBACb1B,EAAqBmC,KAAKH,kCAEhC,OACE,oCACE,kBAAC,EAAD,CAASd,MAAM,yBACb,kBAAC,EAAD,CACEd,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB8B,KAAKb,eAG1B,kBAAC,EAAD,CAASJ,MAAM,cACZnB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAcE,QAAQ,4B,GA/CDkC,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.2807a6c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <td>Good</td>\r\n        <td>{good}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Neutral</td>\r\n        <td>{neutral}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Bad</td>\r\n        <td>{bad}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Total</td>\r\n        <td>{total}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Positive feedback</td>\r\n        <td>{positivePercentage}%</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </>\r\n);\r\n\r\nFeedbackOptions.prototype = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Statistics from \"./Components/Statistics/Statistics\";\r\nimport Notification from \"./Components/Notification/Notification\";\r\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Components/Section/Section\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  handleClick = name => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    return Math.round((good * 100) / this.countTotalFeedback());\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={[\"good\", \"neutral\", \"bad\"]}\r\n            onLeaveFeedback={this.handleClick}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}