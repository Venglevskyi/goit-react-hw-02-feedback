{"version":3,"sources":["Components/Statistics/Statistic.js","Components/Notification/Notification.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","App.js","index.js"],"names":["Statistic","label","value","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","type","onClick","Section","title","children","App","state","handleClick","name","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","querySelector"],"mappings":"kOAceA,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,2BACGD,EADH,KACYC,ICICC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IC4B3BC,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,iCACE,0CACCD,IAAU,EACT,oCACE,kBAAC,EAAD,CAAWR,MAAM,OAAOC,MAAOI,IAC/B,kBAAC,EAAD,CAAWL,MAAM,UAAUC,MAAOK,IAClC,kBAAC,EAAD,CAAWN,MAAM,MAAMC,MAAOM,IAC9B,kBAAC,EAAD,CAAWP,MAAM,QAAQC,MAAOO,MAChC,kBAAC,EAAD,CAAWR,MAAM,oBAAoBC,MAAOQ,OAG9C,kBAAC,EAAD,CAAcN,QAAQ,wBCFbO,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACE,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAA7D,QAGA,4BAAQE,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAA7D,WAGA,4BAAQE,KAAK,SAASC,QAAS,kBAAMF,EAAgBD,EAAQ,MAA7D,SCIWI,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICAgBC,E,2MACnBC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAK3B,GAAN,OAAgB2B,EAAM3B,IAAO,I,EAGvE4B,gCAAkC,WAAO,IAAD,EACP,EAAKV,MAA5Bd,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,QAASC,EADe,EACfA,IACvB,OAAOuB,KAAKC,MAAc,IAAP1B,GAAeE,EAAMD,EAAUD,K,wEAG1C,IAAD,EACwB2B,KAAKb,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,6BACE,kBAAC,EAAD,CAASS,MAAM,yBACb,kBAAC,EAAD,CACEL,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBoB,KAAKZ,cAExB,kBAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKR,mBACZf,mBAAoBuB,KAAKH,wC,GAvCJI,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.5dcf26b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistic = ({ label, value }) => (\r\n  <p>\r\n    {label}: {value}\r\n  </p>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Statistic from \"./Statistic\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <section>\r\n    <h2>Statistics</h2>\r\n    {total() > 0 ? (\r\n      <>\r\n        <Statistic label=\"Good\" value={good} />\r\n        <Statistic label=\"Neutral\" value={neutral} />\r\n        <Statistic label=\"Bad\" value={bad} />\r\n        <Statistic label=\"Total\" value={total()} />\r\n        <Statistic label=\"Positive feedback\" value={positivePercentage()} />\r\n      </>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <>\r\n    <button type=\"button\" onClick={() => onLeaveFeedback(options[0])}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={() => onLeaveFeedback(options[1])}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={() => onLeaveFeedback(options[2])}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Statistics from \"./Components/Statistics/Statistics\";\r\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"./Components/Section/Section\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  handleClick = name => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return Math.round((good * 100) / (bad + neutral + good));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={[\"good\", \"neutral\", \"bad\"]}\r\n            onLeaveFeedback={this.handleClick}\r\n          />\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback}\r\n            positivePercentage={this.countPositiveFeedbackPercentage}\r\n          />\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}